input {
    jdbc {
        jdbc_driver_library => '/usr/share/logstash/mysql-connector-java-8.0.28.jar'
        jdbc_driver_class => 'com.mysql.cj.jdbc.Driver'
        jdbc_connection_string => 'jdbc:mysql://my-database:3306/maindocker04'
        jdbc_user => 'root'
        jdbc_password => 'root'
        schedule => '*/30 * * * * *' # 30초 마다 업데이트
        use_column_value => true
        tracking_column => 'Product_updatedAt'
        tracking_column_type => 'numeric'
        last_run_metadata_path => './record.txt'
        lowercase_column_names => false # 대소문자 구분하게 하기.
        statement => '
        SELECT `Product`.`id` AS `Product_id`, 
                `Product`.`productName` AS `Product_productName`, 
                `Product`.`productPrice` AS `Product_productPrice`, 
                `Product`.`productDescription` AS `Product_productDescription`, 
                `Product`.`productSerialNumber` AS `Product_productSerialNumber`, 
                `Product`.`productDiscount` AS `Product_productDiscount`, 
                `Product`.`productPeopleLiked` AS `Product_productPeopleLiked`, 
                `Product`.`updatedAt` AS `Product_updatedAt`, 
                `Product`.`isStock` AS `Product_isStock`, 
                `Product`.`productPeopleInterested` AS `Product_productPeopleInterested`, 
                `Product`.`brandId` AS `Product_brandId`, 
                `Product`.`seasonId` AS `Product_seasonId`, 
                `Product__Product_brand`.`id` AS `Product__Product_brand_id`, 
                `Product__Product_brand`.`brandName` AS `Product__Product_brand_brandName`, 
                `Product__Product_brand`.`deletedAt` AS `Product__Product_brand_deletedAt`, 
                `Product__Product_season`.`id` AS `Product__Product_season_id`, 
                `Product__Product_season`.`seasonName` AS `Product__Product_season_seasonName`, 
                `Product__Product_season`.`deletedAt` AS `Product__Product_season_deletedAt`,
                 unix_timestamp(`Product`.`updatedAt`) as `Product_updatedAt` 
          FROM `product` `Product` 
        LEFT JOIN `brand` `Product__Product_brand` 
            ON `Product__Product_brand`.`id`=`Product`.`brandId` 
           AND (`Product__Product_brand`.`deletedAt` IS NULL)  
        LEFT JOIN `season` `Product__Product_season` 
            ON `Product__Product_season`.`id`=`Product`.`seasonId` 
           AND (`Product__Product_season`.`deletedAt` IS NULL) 
         WHERE unix_timestamp(`Product`.`updatedAt`) > :sql_last_value order by `Product_updatedAt` asc'
    }
}

filter {
 mutate {
  remove_field => ["@timestamp","@version"]
 }
}

output {
    elasticsearch {
        hosts => 'elasticsearch:9200'
        index => 'myproduct'
        document_id => "%{Product_id}"
        manage_template => true
        template => "/usr/share/logstash/auto-complete-template.json"
        template_name => "product"
        template_overwrite => true
    }
}